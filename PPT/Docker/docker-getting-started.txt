


Docker - Getting started
------------------------

//--------------------------------------------------------------------------
level-1:  Orientation
//--------------------------------------------------------------------------

docker --version
docker info
docker run hello-world
docker image ls
docker container ls --all

## List Docker CLI commands
docker
docker container --help

## Display Docker version and info
docker --version
docker version
docker info

## Execute Docker image
docker run hello-world

## List Docker images
docker image ls

## List Docker containers (running, all, all in quiet mode)
docker container ls
docker container ls --all
docker container ls -aq

//--------------------------------------------------------------------------
// level-2   : containers
//--------------------------------------------------------------------------


- Define a container with Dockerfile
- The app itself  ( requirements.txt & app.py )


ls

docker build -t friendlyhello .
docker image ls
docker run -p 4000:80 friendlyhello
curl http://localhost:4000


docker run -d -p 4000:80 friendlyhello

docker container ls
docker container stop <contaner-id>

docker login

docker tag image username/repository:tag
e.g
docker tag friendlyhello nagabhushanamn/get-started:part2

docker image ls

docker push username/repository:tag
e.g
docker push nagabhushanamn/get-started:part2


docker run -p 4000:80 nagabhushanamn/get-started:part2



//--------------------------------------------------------------------------
// level-3  : services
//--------------------------------------------------------------------------


 - create docker-compose.yml file

 docker swarm init
 docker stack deploy -c docker-compose.yml getstartedlab
 docker service ls
 docker service ps getstartedlab_web
 docker container ls -q

 scale the app   

 docker stack deploy -c docker-compose.yml getstartedlab
 docker container ls -q


 docker stack rm getstartedlab   
 docker swarm leave --force   

summary

    docker stack ls                                            # List stacks or apps
    docker stack deploy -c <composefile> <appname>  # Run the specified Compose file
    docker service ls                 # List running services associated with an app
    docker service ps <service>                  # List tasks associated with an app
    docker inspect <task or container>                   # Inspect task or container
    docker container ls -q                                      # List container IDs
    docker stack rm <appname>                             # Tear down an application
    docker swarm leave --force      # Take down a single node swarm from the manager


//-------------------------------------------------------------------------
// level-4  : swarm
//--------------------------------------------------------------------------


docker swarm init

docker-machine create --driver virtualbox myvm1
docker-machine create --driver virtualbox myvm2

docker-machine ls

docker-machine ssh myvm1 "docker swarm init --advertise-addr <myvm1 ip>"
docker-machine ssh myvm2 "docker swarm join \
--token <token> \
<ip>:2377"

docker-machine ssh myvm1 "docker node ls"

docker-machine env myvm1
export DOCKER_TLS_VERIFY="1"
export DOCKER_HOST="tcp://192.168.99.100:2376"
export DOCKER_CERT_PATH="/Users/sam/.docker/machine/machines/myvm1"

eval $(docker-machine env myvm1)



docker stack deploy -c docker-compose.yml getstartedlab

docker stack ps getstartedlab

Iterating and scaling your app

> docker stack deploy

docker stack rm getstartedlab
eval $(docker-machine env -u)


Restarting Docker machines

> docker-machine ls
> docker-machine start <machine-name>




//-------------------------------------------------------------------------
// level-4  : Stack
//--------------------------------------------------------------------------



