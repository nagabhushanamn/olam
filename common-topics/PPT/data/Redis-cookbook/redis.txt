

-------------------------------------------------------------------------

 Redis is a very popular, memory-based, lightweight key-value database.

 - Redis is a data structure server
 - stands for REmote DIctionary Server

 - With the development of high-concurrency and low-latency systems,
   the use of Redis is becoming more and more widespread

 - https://db-engines.com/en/ranking
 - https://db-engines.com/en/ranking/key-value+store

-------------------------------------------------------------------------

When to use Redis in your application


     - Session store
     - Leaderboards
     - Queues
     - Latest N records
     - Caching

        Since Redis is an in-memory data storage system, 
        using Redis as a cache in front of an RDBMS usually expedites the database query process.

        Here is a simple use case: Before querying the RDBMS, we first look up the record in Redis.
        If the record does not exist in Redis, we query the RDBMS and put the record into Redis

        When writing to the RDBMS, we also write the record to Redis. 
        Records in the cache are associated with a timeout
        or eviction policy such as Least Recently Used (LRU) in order to limit the cache usage.





-------------------------------------------------------------------------



 installing Redis


 - Redis is an open software written in pure C language 
   so that we can install it by compilation.

  https://redis.io/download

-------------------------------------------------------------------------
Data Types
-------------------------------------------------------------------------


a. string

 127.0.0.1:6379> SET "Extreme Pizza" "300 Broadway, New York, NY" 
 127.0.0.1:6379> GET "Extreme Pizza" 
 127.0.0.1:6379> GET "Yummy Pizza" 
 127.0.0.1:6379> STRLEN "Extreme Pizza"
 127.0.0.1:6379> APPEND "Extreme Pizza" " 10011" 
 127.0.0.1:6379> GET "Extreme Pizza" 
 127.0.0.1:6379> SETRANGE "Extreme Pizza" 14 "Washington, DC 20009" 

 127.0.0.1:6379> SETNX "Lobster Palace" "437 Main St, Chicago, IL" 
 127.0.0.1:6379> SETNX "Extreme Pizza" "100 Broadway, New York, NY" 


 MSET key value [key value...]
 MGET key value [key value...]


 127.0.0.1:6379> MSET "Sakura Sushi" "123 Ellis St, Chicago, IL" "Green Curry Thai" "456 American Way, Seattle, WA"
 127.0.0.1:6379> MGET "Sakura Sushi" "Green Curry Thai" "nonexistent" 

-------------------------------------------------------------------------

2. list

    
 127.0.0.1:6379> LPUSH favorite_restaurants "PF Chang's" "Olive Garden"
 127.0.0.1:6379> LRANGE favorite_restaurants 0 -1
 127.0.0.1:6379> RPUSH favorite_restaurants "Outback Steakhouse" "Red Lobster"
 127.0.0.1:6379> LRANGE favorite_restaurants 0 -1
 127.0.0.1:6379> LINSERT favorite_restaurants AFTER "PF Chang's" "Indian Tandoor"
 127.0.0.1:6379> LRANGE favorite_restaurants 0 -1
 127.0.0.1:6379> LINDEX favorite_restaurants 3

 127.0.0.1:6379> LPOP favorite_restaurants
 127.0.0.1:6379> RPOP favorite_restaurants
 127.0.0.1:6379> LPOP non_existent

 127.0.0.1:6379> LRANGE favorite_restaurants 0 -1
 127.0.0.1:6379> LTRIM favorite_restaurants 1 -1
 127.0.0.1:6379> LRANGE favorite_restaurants 0 -1


 127.0.0.1:6379> LSET favorite_restaurants 1 "Longhorn Steakhouse"
 127.0.0.1:6379> LRANGE favorite_restaurants 0 -1


 worker-1> BRPOP job_queue 0 
 worker-2> BRPOP job_queue 0

 dispatcher> LPUSH job_queue job1 
 dispatcher> LPUSH job_queue job2 job3 
 dispatcher> LRANGE job_queue 0 -1 


-------------------------------------------------------------------------

 3. hash data type


 127.0.0.1:6379> HMSET "Kyoto Ramen" "address" "801 Mission St, San Jose, CA" "phone" "555-123-6543" "rating" "5.0" 
 127.0.0.1:6379> HMGET "Kyoto Ramen" "address" "phone" "rating" 

 127.0.0.1:6379> HEXISTS "Kyoto Ramen" "phone" 
 127.0.0.1:6379> HEXISTS "Kyoto Ramen" "hours" 

 127.0.0.1:6379> HGETALL "Kyoto Ramen" 

 127.0.0.1:6379> HSET "Kyoto Ramen" "rating" "4.9" 
 127.0.0.1:6379> HSET "Kyoto Ramen" "status" "open" 
 
 127.0.0.1:6379> HMGET "Kyoto Ramen" "rating" "status" 

 127.0.0.1:6379> HDEL "Kyoto Ramen" "address" "phone" 
 127.0.0.1:6379> HGETALL "Kyoto Ramen" 

 127.0.0.1:6379> HSETNX "Kyoto Ramen" "phone" "555-555-0001" 
 127.0.0.1:6379> HGET "Kyoto Ramen" "phone" 

 127.0.0.1:6379> HMGET "Kyoto Ramen" "rating" "hours" 
 
 127.0.0.1:6379> HGET "Little Sheep Mongolian" "address" 

 127.0.0.1:6379> HSCAN restaurant_ratings 0 MATCH *garden* 

-------------------------------------------------------------------------
 
 
 4. set

  It is often used in applications for membership testing,
  duplicates removal, and math operations (union, intersection, and difference)

  
  127.0.0.1:6379> SADD "Original Buffalo Wings" "affordable" "spicy" "busy" "great taste"
  127.0.0.1:6379> SISMEMBER "Original Buffalo Wings" "busy"
  1127.0.0.1:6379> SISMEMBER "Original Buffalo Wings" "costly"
  127.0.0.1:6379> SREM "Original Buffalo Wings" "busy" "spicy"
  127.0.0.1:6379> SISMEMBER "Original Buffalo Wings" "busy"
  127.0.0.1:6379> SISMEMBER "Original Buffalo Wings" "spicy"

  127.0.0.1:6379> SCARD "Original Buffalo Wings" 

  127.0.0.1:6379> SMEMBERS "Original Buffalo Wings"

  127.0.0.1:6379> SADD "Big Bear Wings" "affordable" "spacious" "great music"

  127.0.0.1:6379> SINTER "Original Buffalo Wings" "Big Bear Wings"  

  127.0.0.1:6379> SINTERSTORE "common_tags" "Original Buffalo Wings" "Big Bear Wings" 
  
  127.0.0.1:6379> SMEMBERS "common_tags"



-------------------------------------------------------------------------
 
 4. sorted set


 127.0.0.1:6379> ZADD ranking:restaurants 100 "Olive Garden" 23 "PF Chang's" 34 "Outback Steakhouse" 45 "Red Lobster" 88 "Longhorn Steakhouse"
 127.0.0.1:6379> ZREVRANGE ranking:restaurants 0 -1 WITHSCORES 
 
 127.0.0.1:6379> ZINCRBY ranking:restaurants 1 "Red Lobster"
 127.0.0.1:6379> ZREVRANK ranking:restaurants "Olive Garden"

 127.0.0.1:6379> ZSCORE ranking:restaurants  "Olive Garden" 

 127.0.0.1:6379> ZADD ranking2:restaurants 50 "Olive Garden" 33 "PF Chang's" 55 "Outback Steakhouse" 190 "Kung Pao House" 
 
 127.0.0.1:6379> ZUNIONSTORE totalranking 2 ranking:restaurants ranking2:restaurants WEIGHTS 1 2 
 
 127.0.0.1:6379> ZREVRANGE totalranking 0 -1 WITHSCORES 

-------------------------------------------------------------------------

 5. HyperLogLog data type

    Counting distinct values is a common task in various kinds of daily data processing scenarios.

    127.0.0.1:6379> PFADD "Counting:Olive Garden" "0000123" 
    127.0.0.1:6379> PFADD "Counting:Olive Garden" "0023992" 

    127.0.0.1:6379> PFCOUNT "Counting:Olive Garden" 


    127.0.0.1:6379> PFADD "Counting:Olive Garden:20170903" "0023992" "0023991" "0045992" 
    127.0.0.1:6379> PFADD "Counting:Olive Garden:20170904" "0023992" "0023991" "0045992" 
    127.0.0.1:6379> PFADD "Counting:Olive Garden:20170905" "0024492" "0023211" "0045292" 
    127.0.0.1:6379> PFADD "Counting:Olive Garden:20170906" "0023999" "0063991" "0045922" 
    127.0.0.1:6379> PFADD "Counting:Olive Garden:20170907" "0023292" "0023991" "0045921" 
    127.0.0.1:6379> PFADD "Counting:Olive Garden:20170908" "0043282" "0023984" "0045092" 
    127.0.0.1:6379> PFADD "Counting:Olive Garden:20170909" "0023992" "0023991" "0045992"

    127.0.0.1:6379> PFMERGE "Counting:Olive Garden:20170903week" "Counting:Olive Garden:20170903" "Counting:Olive Garden:20170904" "Counting:Olive Garden:20170905" "Counting:Olive Garden:20170906" "Counting:Olive Garden:20170907" "Counting:Olive Garden:20170908" "Counting:Olive Garden:20170909" 
 
    127.0.0.1:6379> PFCOUNT "Counting:Olive Garden:20170903week" 


-------------------------------------------------------------------------

 6. Geo

   127.0.0.1:6379> GEOADD restaurants:CA -121.896321 37.916750 "Olive Garden" -117.910937 33.804047 "P.F. Chang's" -118.508020 34.453276 "Outback Steakhouse" -119.152439 34.264558 "Red Lobster" -122.276909 39.458300 "Longhorn Charcoal Pit" 
   127.0.0.1:6379> GEOPOS restaurants:CA "Red Lobster" 

   127.0.0.1:6379> GEORADIUS  restaurants:CA  -121.923170 37.878506 5 km 
   127.0.0.1:6379> GEODIST restaurants:CA "P.F. Chang's" "Outback Steakhouse" km
   127.0.0.1:6379> GEORADIUSBYMEMBER restaurants:CA "Outback Steakhouse" 100 km 


-------------------------------------------------------------------------


Data Features



    1. Using bitmaps


        A bitmap (also known as a bit array, or bit vector) is an array of bits.

        For example, when a user whose ID is 100 has tried the restaurant reservation feature in Relp, 
        we set the corresponding bit:

        127.0.0.1:6379> SETBIT "users_tried_reservation" 100 1
        127.0.0.1:6379> GETBIT "users_tried_online_orders" 400
        127.0.0.1:6379> BITCOUNT "users_tried_reservation"

        127.0.0.1:6379> BITOP AND "users_tried_both_reservation_and_online_orders" "users_tried_reservation" "users_tried_online_orders" 
        127.0.0.1:6379> BITCOUNT "users_tried_both_reservation_and_online_orders" 

    
    -------------------------------------------------------------------------

   2. Setting expiration on keys


    127.0.0.1:6379> LPUSH "closest_restaurant_ids" 109 200 233 543 222
    127.0.0.1:6379> EXPIRE "closest_restaurant_ids" 300 
    127.0.0.1:6379> TTL "closest_restaurant_ids" 
    127.0.0.1:6379> EXISTS "closest_restaurant_ids" 

    -------------------------------------------------------------------------

   3. Using SORT  


    127.0.0.1:6379> SADD "user:123:favorite_restaurant_ids" 200 365 104 455 333
    127.0.0.1:6379> SORT "user:123:favorite_restaurant_ids"

    127.0.0.1:6379> SADD "user:123:favorite_restaurants" "Dunkin Donuts" "Subway" "KFC" "Burger King" "Wendy's"
    127.0.0.1:6379> SORT "user:123:favorite_restaurants" ALPHA 


    127.0.0.1:6379> SORT "user:123:favorite_restaurants" ALPHA LIMIT 0 3


    127.0.0.1:6379> SET "restaurant_rating_200" 4.3 
    127.0.0.1:6379> SET "restaurant_rating_365" 4.0 
    127.0.0.1:6379> SET "restaurant_rating_104" 4.8 
    127.0.0.1:6379> SET "restaurant_rating_455" 4.7 
    127.0.0.1:6379> SET "restaurant_rating_333" 4.6 
    127.0.0.1:6379> SORT "user:123:favorite_restaurant_ids" BY restaurant_rating_* DESC 

    -------------------------------------------------------------------------

   4. Using PubSub

   127.0.0.1:6379> SUBSCRIBE restaurants:Chinese 

   127.0.0.1:6379> SUBSCRIBE restaurants:Chinese restaurants:Thai 

   127.0.0.1:6379> PUBLISH restaurants:Chinese "Beijing roast duck discount tomorrow" 
   127.0.0.1:6379> PUBLISH restaurants:Thai "3$ for Tom yum soap in this weekend!" 


    -------------------------------------------------------------------------

    Developing with Redis














